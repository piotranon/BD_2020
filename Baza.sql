CREATE TABLE pracownicy (
        id_pracownika int PRIMARY KEY,
        imie varchar(255),
        nazwisko varchar(255),
        pesel varchar(255),
        data_urodzenia date,
        id_adresu int,
        login varchar(255),
        haslo varchar(255),
        CONSTRAINT unique_pesel UNIQUE (pesel)
);
CREATE TABLE klienci (
        id_klienta int PRIMARY KEY,
        imie varchar(255),
        nazwisko varchar(255),
        id_adresu int
);
CREATE TABLE adres (
        id_adresu int PRIMARY KEY,
        miejscowosc varchar(255),
        kod_pocztowy varchar(255),
        ulica varchar(255),
        numer_budynku int
);
CREATE TABLE ksiazki (
        id_ksiazki int PRIMARY KEY,
        tytul varchar(255),
        data_wydania date,
        ilosc int,
        id_wydawnictwa int,
        id_kategorii int
);
CREATE TABLE ksiazki_tag (
        id_ksiazki int,
        id_tagu int
);
CREATE TABLE tag (
        id_tagu int PRIMARY KEY,
        nazwa varchar(255),
        CONSTRAINT unique_tag UNIQUE (nazwa)
);
CREATE TABLE wydawnictwa (
        id_wydawnictwa int PRIMARY KEY,
        nazwa varchar(255),
        id_adresu int,
        CONSTRAINT unique_wydawnictwo UNIQUE (nazwa)
);
CREATE TABLE autorzy (
        id_autora int PRIMARY KEY,
        imie varchar(255),
        nazwisko varchar(255)
);
CREATE TABLE autorzy_ksiazki (
        id_autora int,
        id_ksiazki int
);
CREATE TABLE kategorie (
        id_kategorii int PRIMARY KEY,
        nazwa varchar(255),
        CONSTRAINT unique_kategoria UNIQUE (nazwa)
);
CREATE TABLE wypozyczenia (
        id_wypozyczenia int PRIMARY KEY,
        id_ksiazki int,
        id_pracownika int,
        id_klienta int,
        data_wypozyczenia date,
        data_zwrotu date
);

create or replace NONEDITIONABLE TRIGGER ADRES_TRG 
BEFORE INSERT ON ADRES 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_ADRESU IS NULL THEN
      SELECT ADRES_SEQ.NEXTVAL INTO :NEW.ID_ADRESU FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
create or replace NONEDITIONABLE TRIGGER AUTORZY_TRG 
BEFORE INSERT ON AUTORZY 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_AUTORA IS NULL THEN
      SELECT AUTORZY_SEQ.NEXTVAL INTO :NEW.ID_AUTORA FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
create or replace NONEDITIONABLE TRIGGER KATEGORIE_TRG 
BEFORE INSERT ON KATEGORIE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_KATEGORII IS NULL THEN
      SELECT KATEGORIE_SEQ.NEXTVAL INTO :NEW.ID_KATEGORII FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
create or replace NONEDITIONABLE TRIGGER KLIENCI_TRG 
BEFORE INSERT ON KLIENCI 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_KLIENTA IS NULL THEN
      SELECT KLIENCI_SEQ.NEXTVAL INTO :NEW.ID_KLIENTA FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
create or replace NONEDITIONABLE TRIGGER KSIAZKI_TRG 
BEFORE INSERT ON KSIAZKI 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_KSIAZKI IS NULL THEN
      SELECT KSIAZKI_SEQ.NEXTVAL INTO :NEW.ID_KSIAZKI FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
create or replace NONEDITIONABLE TRIGGER PRACOWNICY_TRG 
BEFORE INSERT ON PRACOWNICY 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_PRACOWNIKA IS NULL THEN
      SELECT PRACOWNICY_SEQ.NEXTVAL INTO :NEW.ID_PRACOWNIKA FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
create or replace NONEDITIONABLE TRIGGER TAG_TRG 
BEFORE INSERT ON TAG 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_TAGU IS NULL THEN
      SELECT TAG_SEQ.NEXTVAL INTO :NEW.ID_TAGU FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
create or replace NONEDITIONABLE TRIGGER WYDAWNICTWA_TRG 
BEFORE INSERT ON WYDAWNICTWA 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_WYDAWNICTWA IS NULL THEN
      SELECT WYDAWNICTWA_SEQ.NEXTVAL INTO :NEW.ID_WYDAWNICTWA FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
create or replace NONEDITIONABLE TRIGGER WYPOZYCZENIA_TRG 
BEFORE INSERT ON WYPOZYCZENIA 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_WYPOZYCZENIA IS NULL THEN
      SELECT WYPOZYCZENIA_SEQ.NEXTVAL INTO :NEW.ID_WYPOZYCZENIA FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

CREATE SEQUENCE  "STUDENT"."ADRES_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
CREATE SEQUENCE  "STUDENT"."AUTORZY_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
CREATE SEQUENCE  "STUDENT"."KATEGORIE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
CREATE SEQUENCE  "STUDENT"."KLIENCI_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
CREATE SEQUENCE  "STUDENT"."KSIAZKI_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
CREATE SEQUENCE  "STUDENT"."PRACOWNICY_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
CREATE SEQUENCE  "STUDENT"."TAG_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
CREATE SEQUENCE  "STUDENT"."WYDAWNICTWA_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
CREATE SEQUENCE  "STUDENT"."WYPOZYCZENIA_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;


create or replace NONEDITIONABLE PROCEDURE "ADDAUTOR" 
(imie IN VARCHAR2, nazwisko IN VARCHAR2)
AS
BEGIN
    INSERT INTO autorzy(imie,nazwisko) VALUES (imie,nazwisko);
    Commit;
END;
create or replace NONEDITIONABLE PROCEDURE "ADDKATEGORIA" 
(nazwa IN VARCHAR2)
AS
BEGIN
    INSERT INTO kategorie(nazwa) VALUES (nazwa);
    Commit;
END;
create or replace NONEDITIONABLE PROCEDURE "ADDTAG" 
(nazwaTagu IN VARCHAR2)
AS
BEGIN
    INSERT INTO tag(nazwa) VALUES (nazwaTagu);
    Commit;
END;


Insert into adres(miejscowosc,kod_pocztowy,ulica,numer_budynku) values ('Rzeszów','35-213','Dębicka',402);
commit;
Insert into pracownicy(imie,nazwisko,pesel,data_urodzenia,id_adresu,login,haslo) VALUES ('Piotr','Dlugosz','123',CURRENT_DATE,adres,'login','haslo');
commit;